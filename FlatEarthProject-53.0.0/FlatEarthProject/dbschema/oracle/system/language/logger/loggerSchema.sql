DROP TABLE LOGGER_TABLE;

DROP SEQUENCE LOGGER_TABLE_SEQUENCE;

CREATE TABLE LOGGER_TABLE 
(
   	 ID           				NUMBER(4)    	NOT NULL
  	,LOGGER_NAME				VARCHAR2(30)	NOT NULL
	,HANDLER_TYPE				VARCHAR2(30)	NOT NULL
	,FILE_HANDLER				VARCHAR2(30)	NOT NULL
	,SERVER_NAME				VARCHAR2(30)	NOT NULL
  	,PORT_NUMBER				VARCHAR2(30)	NOT NULL
  	,OUTPUT_STREAM				VARCHAR2(30)	NOT NULL
  	,FILENAME_PATTERN			VARCHAR2(30)	NOT NULL
  	,FILE_APPEND				NUMBER(1)		NOT NULL
  	,MAXIMUM_DISK_FILES			NUMBER(3)		NOT NULL
  	,FILE_LIMIT_SIZE			NUMBER(8)		NOT NULL
  	,MAXIMUM_RECORD_BUFFER		NUMBER(8)		NOT NULL
  	,FILTER_CODE				NUMBER(1)		NOT NULL
  	,FILENAME_VALUE				VARCHAR2(30)	NOT NULL
  	,PUSH_LEVEL					NUMBER(1)		NOT NULL
  	,SOURCE_CLASS				VARCHAR2(30)	NOT NULL
  	,SOURCE_METHOD				VARCHAR2(30)	NOT NULL
  	,RESOURCE_BUNDLE			VARCHAR2(30)	NOT NULL
  	,FORMAT_CODE				NUMBER(1)		NOT NULL
  	,CREATE_USER				CHAR(8)			NOT NULL
  	,CREATE_TIMESTAMP			TIMESTAMP(4)	NOT NULL
  	,MODIFY_USER				CHAR(8)			NOT NULL
  	,MODIFY_TIMESTAMP			TIMESTAMP(4)	NOT NULL
);

ALTER TABLE LOGGER_TABLE ADD (
  CONSTRAINT LOGGER_TABLE_PK PRIMARY KEY (ID));

CREATE SEQUENCE LOGGER_TABLE_SEQUENCE START WITH 1;

CREATE OR REPLACE TRIGGER LOGGER_TABLE_TRIGGER 
BEFORE INSERT ON LOGGER_TABLE 
FOR EACH ROW

BEGIN
  SELECT LOGGER_TABLE_SEQUENCE.NEXTVAL
  INTO   :NEW.ID
  FROM   DUAL;
END;
/